generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String       @id @default(uuid())
  oAuthProviderId String?      @unique
  username        String       @unique
  password        String?
  role            Role         @default(USER)
  imgUrl          String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  authoredPosts   Post[]       @relation("authoredPosts")
  editedPosts     Post[]       @relation("editedPosts")
  comments        Comment[]
  SubComment      SubComment[]
}

model Post {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  subTitle  String?
  content   String
  imgUrl    String?
  author    User      @relation(fields: [authorId], references: [id], name: "authoredPosts")
  authorId  String
  comments  Comment[]
  editorId  String?
  editor    User?     @relation(fields: [editorId], references: [id], name: "editedPosts")
}

model Comment {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  content    String
  author     User         @relation(fields: [authorId], references: [id])
  authorId   String
  post       Post         @relation(fields: [postId], references: [id])
  postId     String
  SubComment SubComment[]
}

model SubComment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  commentId String
  comment   Comment  @relation(fields: [commentId], references: [id])
}

enum Role {
  USER
  ADMIN
}
